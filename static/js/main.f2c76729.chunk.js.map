{"version":3,"sources":["components/Loader/Spiner.module.css","servises/api.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Spiner.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/App.js","index.js"],"names":["module","exports","getImages","pictureTag","page","fetch","then","res","json","data","hits","Modal","onClose","picture","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","className","onClick","currentTarget","target","src","alt","ImageGalleryItem","pictures","useState","showModal","setShowModal","largeImage","setLargeImage","toggleModal","largeImageURL","map","webformatURL","tags","id","Spiner","style","spiner","type","color","height","width","timeout","Component","ImageGallery","setPictures","isHidden","setIsHidden","setPage","loading","setLoading","catch","err","console","log","finally","image","scrollTo","top","document","documentElement","scrollHeight","behavior","initialState","Searchbar","onSubmit","form","setForm","preventDefault","trim","toast","error","autocomplete","autofocus","placeholder","onChange","prev","value","App","state","setState","autoClose","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f2c76729.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spiner\":\"Spiner_spiner__2YWlc\"};","const BASE_URL = 'https://pixabay.com/api/';\r\nconst ApiKey = '23292675-06f406722274daa99671b1028';\r\n\r\nexport const getImages = (pictureTag, page) => {\r\n  return fetch(\r\n    `${BASE_URL}?q=${pictureTag}&page=${page}&key=${ApiKey}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => data.hits);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Modal = ({ onClose, picture }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose(e);\r\n    }\r\n  };\r\n\r\n  const handleBackdropeClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleBackdropeClick}>\r\n      <div className=\"Modal\">\r\n        <img src={picture} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  picture: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nconst ImageGalleryItem = ({ pictures }) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImage, setLargeImage] = useState(\"\");\r\n\r\n  const toggleModal = (largeImageURL) => {\r\n    setShowModal(!showModal);\r\n    setLargeImage(largeImageURL);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {pictures.map((picture) => {\r\n        const togglePicture = () => toggleModal(picture.largeImageURL);\r\n        return (\r\n          <li className=\"ImageGalleryItem\" key={picture.id}>\r\n            <img\r\n              src={picture.webformatURL}\r\n              alt={picture.tags}\r\n              className=\"ImageGalleryItem-image\"\r\n              onClick={togglePicture}\r\n              id={picture.largeImageURL}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n      {showModal && <Modal onClose={toggleModal} picture={largeImage} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n\r\n// class ImageGalleryItem extends Component {\r\n//   state = {\r\n//     showModal: false,\r\n//     largeImage: '',\r\n//   };\r\n\r\n//   toggleModal = largeImageURL => {\r\n//     this.setState(prev => ({\r\n//       showModal: !prev.showModal,\r\n//       largeImage: largeImageURL,\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <>\r\n//         {this.props.pictures.map(picture => {\r\n//           const togglePicture = () => this.toggleModal(picture.largeImageURL);\r\n//           return (\r\n//             <li className=\"ImageGalleryItem\" key={picture.id}>\r\n//               <img\r\n//                 src={picture.webformatURL}\r\n//                 alt={picture.tags}\r\n//                 className=\"ImageGalleryItem-image\"\r\n//                 onClick={togglePicture}\r\n//                 id={picture.largeImageURL}\r\n//               />\r\n//             </li>\r\n//           );\r\n//         })}\r\n//         {this.state.showModal && (\r\n//           <Modal onClose={this.toggleModal} picture={this.state.largeImage} />\r\n//         )}\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default ImageGalleryItem;\r\n","import Loader from \"react-loader-spinner\";\r\nimport React, { Component } from \"react\";\r\nimport style from \"./Spiner.module.css\";\r\n\r\nexport default class Spiner extends Component {\r\n  render() {\r\n    return (\r\n      <div className={style.spiner}>\r\n        {\" \"}\r\n        <Loader\r\n          type=\"TailSpin\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000} //3 secs\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { getImages } from \"../../servises/api\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport Loader from \"../Loader/Spiner\";\r\n\r\nconst ImageGallery = ({ pictureTag }) => {\r\n  const [pictures, setPictures] = useState(null);\r\n  const [isHidden, setIsHidden] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!pictureTag) {\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    getImages(pictureTag, 1)\r\n      .then((pictures) => {\r\n        setPictures(pictures);\r\n        setIsHidden(true);\r\n        setPage(page + 1);\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false));\r\n  }, [pictureTag]);\r\n\r\n  const onBtnClick = () => {\r\n    setLoading(true);\r\n    getImages(pictureTag, page)\r\n      .then((image) => {\r\n        setPictures([...pictures, ...image]);\r\n        setIsHidden(true);\r\n        setPage(page + 1);\r\n        setLoading(true);\r\n        if (page !== 1) {\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(setLoading(false));\r\n  };\r\n\r\n  return (\r\n    <div className=\"ImageContainer\">\r\n      {loading && <Loader />}\r\n      <ul className=\"ImageGallery\">\r\n        {pictures && <ImageGalleryItem pictures={pictures} />}\r\n      </ul>\r\n      {isHidden && (\r\n        <button type=\"button\" className=\"Button\" onClick={onBtnClick}>\r\n          Load more\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  pictureTag: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst initialState = {\r\n  picture: \"\",\r\n};\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [form, setForm] = useState(initialState);\r\n\r\n  const handleChange = (e) => {\r\n    setForm((prev) => ({ ...prev, picture: e.target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (form.picture.trim() === \"\") {\r\n      toast.error(\"Введите название картинки\");\r\n      return;\r\n    }\r\n    onSubmit(form.picture);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autocomplete=\"off\"\r\n          autofocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { useState } from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ImageGallery from \"./ImageGallery/ImageGallery\";\r\nimport Searchbar from \"./Searchbar/Searchbar\";\r\n\r\nconst initialState = {\r\n  pictureTag: \"\",\r\n};\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const handleFormSubmit = (pictureTag) => {\r\n    setState((prev) => ({ ...prev, pictureTag }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Searchbar onSubmit={handleFormSubmit} />\r\n      <ImageGallery pictureTag={state.pictureTag} />\r\n      <ToastContainer autoClose={3000} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}